#!/bin/bash

START_TIME=$(date +%s)

echo "  
 
‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó     ‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó 
‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó
‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë ‚ïö‚ñà‚ñà‚ñà‚ïî‚ïù ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë
‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë ‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë
‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïî‚ïù ‚ñà‚ñà‚ïó‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù
‚ïö‚ïê‚ïù     ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù   ‚ïö‚ïê‚ïù    ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù 
                                                                                                                                          
"

echo "Iniciando FLUXO-CERTO..."

echo "Verifica√ß√£o de depend√™ncias do sistema..."

# Fun√ß√£o para verificar e instalar Java
verificar_java() {
    echo "Verificando se o Java est√° instalado..."
    java -version > /dev/null 2>&1
    if [ $? -eq 0 ]; then
        echo "Cliente j√° possui o Java instalado!"
    else
        echo "Cliente n√£o possui o Java instalado!"
        echo "Instalando o Java..."
        sudo apt install -y openjdk-21-jdk
        echo "Instala√ß√£o do Java conclu√≠da!"
    fi
}

# Fun√ß√£o para verificar e instalar Docker e j√° iniciar containers
verificar_docker_e_containers() {
    echo "Verificando se o Docker est√° instalado..."
    docker --version > /dev/null 2>&1
    if [ $? -eq 0 ]; then
        echo "Cliente j√° possui o Docker instalado!"
    else
        echo "Cliente n√£o possui o Docker instalado!"
        echo "Instalando o Docker..."
        sudo apt install -y docker.io
        echo "Instala√ß√£o do Docker conclu√≠da!"
    fi

    echo "Iniciando os servi√ßos do Docker..."
    sudo systemctl start docker

    # Iniciar containers em paralelo tamb√©m
    start_banco &
    start_site &
    
    wait
    echo "Containers prontos!"
}

# Fun√ß√£o para o Banco de Dados
start_banco() {
    echo "Iniciando opera√ß√µes do Banco de Dados..."
    local dir_banco="./bancoDeDadosMYSQL"

    if [ "$(sudo docker ps -a -q -f name=container-bd)" ]; then
        echo "Container do banco de dados j√° existe."
        if [ "$(sudo docker ps -q -f name=container-bd)" ]; then
            echo "Container do banco j√° est√° em execu√ß√£o."
        else
            echo "Iniciando o container do banco de dados..."
            sudo docker start container-bd
        fi
    else
        echo "Criando e iniciando o container do banco de dados..."
        sudo docker build -t imagem-bd-fluxo-certo "$dir_banco"
        sudo docker run -d --name container-bd -p 3306:3306 imagem-bd-fluxo-certo
    fi
    echo "Banco de Dados pronto."
}

# Fun√ß√£o para o Site Fluxo-Certo
start_site() {
    echo "Iniciando opera√ß√µes do Site Fluxo-Certo..."
    local dir_site="./siteFluxoCerto"

    if [ "$(sudo docker ps -a -q -f name=container_fluxocerto)" ]; then
        echo "Container do site j√° existe."
        if [ "$(sudo docker ps -q -f name=container_fluxocerto)" ]; then
            echo "Container do site j√° est√° em execu√ß√£o."
        else
            echo "Iniciando o container do site..."
            sudo docker start container_fluxocerto
        fi
    else
        echo "Criando e iniciando o container do site..."
        sudo docker build -t fluxocerto "$dir_site"
        sudo docker run -d -p 8080:8080 --name container_fluxocerto fluxocerto
    fi
    echo "Site Fluxo-Certo pronto."
}

# Rodar Docker+containers e Java em paralelo
verificar_docker_e_containers &
verificar_java &

# Esperar ambos terminarem
wait

echo "‚úÖ Ambiente preparado com sucesso!"

echo ""
echo "==============================================================================="
echo ""

echo "üîß Criando a rede Docker 'fluxo-net'..."

# Verifica se a rede j√° existe
if ! sudo docker network ls | grep -q "fluxo-net"; then
  sudo docker network create fluxo-net && \
  echo "‚úÖ Rede 'fluxo-net' criada com sucesso!"
else
  echo "‚ÑπÔ∏è A rede 'fluxo-net' j√° existe. Pulando cria√ß√£o."
fi

echo ""

# Fun√ß√£o para conectar container √† rede
conectar_container() {
  CONTAINER=$1
  echo "üîó Conectando o container '$CONTAINER' √† rede 'fluxo-net'..."
  if sudo docker network inspect fluxo-net | grep -q "$CONTAINER"; then
    echo "‚ÑπÔ∏è O container '$CONTAINER' j√° est√° conectado √† rede."
  else
    sudo docker network connect fluxo-net "$CONTAINER" && \
    echo "‚úÖ Container '$CONTAINER' conectado com sucesso!"
  fi
  echo ""
}

# Conecta os containers
conectar_container container-bd
conectar_container container_fluxocerto

echo "üöÄ Todos os containers foram conectados √† rede 'fluxo-net' com sucesso!"

echo ""
echo "==============================================================================="
echo ""
